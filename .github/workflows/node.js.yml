# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

env:
  NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
  NEXT_PUBLIC_GOOGLE_SHEET_URL: ${{ secrets.NEXT_PUBLIC_GOOGLE_SHEET_URL }}
  NEXT_PUBLIC_STORYBLOK_ACCESS_TOKEN: ${{ secrets.NEXT_PUBLIC_STORYBLOK_ACCESS_TOKEN }}
  NEXT_PUBLIC_FRONTEND_URL: ${{ secrets.NEXT_PUBLIC_FRONTEND_URL }}
  NEXT_PUBLIC_HR_LOGIN_URL: ${{ secrets.NEXT_PUBLIC_HR_LOGIN_URL }}
  NEXT_PUBLIC_GOOGLE_ANALYTICS_TOKEN: ${{ secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS_TOKEN }}

on:
  workflow_dispatch:
  push:
    branches:
      - production
      - staging

jobs:
  build-production:
    if: github.ref == 'refs/heads/production'
    runs-on: [self-hosted, prod-tjap-user-frontend-v1]

    strategy:
      matrix:
        node-version: [20.17.0]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm i
      - run: npm run build
      - run: pm2 restart prod-tjap-user-frontend-v1

  build-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: [self-hosted, tjap-user-frontend-v1]

    strategy:
      matrix:
        node-version: [20.17.0]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm i
      - run: npm run build
      - run: pm2 restart tjap-user-frontend-v1
